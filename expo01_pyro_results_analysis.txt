#I know you don't use Jupyter notebooks, and they are also very hard to share, so here is a simple plain txt file with the code
#we ran it with a new entry of "df["Area_F1"].plot()"
#note! this current config has the lines being graphed incorrectly 
#we currently see 6 lines being plotted at 20 points, when it SHOULD be 20 lines, each with 6 points to plot 
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Read Excel file into pandas DataFrame
#make sure to change file path after downloading new excel sheet
df = pd.read_excel('/Users/jeremygoodenough/Downloads/exp01_pyro_results.xlsx', header=1, index_col=0, dtype=float
                  )

# header in line 1

names_area_cols = []  # list
names_vel_cols = []
for i in range(1, 7):
    name1 = "Area_F"+ f"{i}"
    if i<6:
        name2 = "Vel_F" + f"{i}"
        names_vel_cols.append(name2)
    else:
        pass
    names_area_cols.append(name1)
    
    
print(names_area_cols, names_vel_cols)
cols = names_area_cols + names_vel_cols
print(df.columns)
df.columns = cols
print(df.columns)
    
"""columns = ["Area_F1", "Area_F2", "Area_F3", "Area_F4", "Area_F5", "Area_F6",
          "Vel_F1", "Area_F1", "Area_F1", "Area_F1", "Area_F1", "Area_F1"]"""
print(df.head())

def plot(df):
    "this function plots my dataframe"
    # Plot each line
    for i, col in enumerate(df.columns):
        plt.plot(df[col])

    # Add labels and title
    plt.xlabel('X axis label')
    plt.ylabel('Y axis label')
    plt.title('Multiple Lines Plot')

    # Add legend
    plt.legend(df.colums)

    # Show the plot
    plt.show()